// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/34.h"

#include "definitions/config.dtsi"
#include "definitions/russian.dtsi"
#include "features/behaviors.dtsi"
#include "features/combos.dtsi"
#include "features/conditional_layers.dtsi"

/ {
    keymap {
        compatible = "zmk,keymap";

        eng_layer {
            label = "ENG";
            bindings = <
            &kp Q      &kp W      &kp F      &kp P      &kp B          &kp J      &kp L      &kp U      &kp Y      &kp SEMI
            &kp A      &kp R      &kp S      &kp T      &kp G          &kp M      &kp N      &kp E      &kp I      &kp O
            &kp Z      &kp X      &kp C      &kp D      &kp V          &kp K      &kp H      &kp COMMA  &kp DOT    &kp FSLH
                                       &lt SYMB SPACE   &sl FUNC      &lt NUM ESC  &mt LSHIFT BSPC
            >;
        };

        ru_layer {
            label = "RU";
            bindings = <
            &kp RU_F   &kp RU_YA  &ru_ss_hs  &kp RU_P   &ru_b_jo     &kp RU_H  &kp RU_L  &kp RU_Y    &kp RU_JI  &kp RU_ZH
            &kp RU_A   &kp RU_R   &kp RU_S   &kp RU_T   &kp RU_G     &kp RU_M  &kp RU_N  &kp RU_E    &kp RU_I   &kp RU_O
            &kp RU_CH  &kp RU_C   &kp RU_K   &kp RU_D   &kp RU_YI    &kp RU_Z  &kp RU_V  &ru_sh_sch  &kp RU_YU  &kp RU_IE
                                       &lt SYMB SPACE   &sl FUNC     &lt NUM ESC  &mt LSHIFT BSPC
            >;
        };

        symb_layer {
            label = "SYMB";
            bindings = <
            &kp_en TILDE  &kp_en AT    &kp_en PRCNT  &kp_en EXCL   &kp_en HASH      &kp_en SLASH  &kp_en QMARK  &kp_en LT     &kp_en GT    &kp_en BSLH
            &kp_en SQT    &kp_en LBKT  &kp_en RBKT   &kp_en EQUAL  &kp_en PLUS      &kp_en STAR   &kp_en UNDER  &kp_en LPAR   &kp_en RPAR  &kp_en MINUS
            &kp_en COLON  &kp_en SEMI  &kp_en DQT    &kp_en CARET  &kp_en DLLR      &kp_en LBRC   &kp_en RBRC   &kp_en GRAVE  &kp_en AMPS  &kp_en PIPE
                                            &kp SPACE  &kp BSPC    &kp_en PERIOD    &kp_en COMMA
            >;
        };
        num_layer {
            label = "NUM";
            bindings = <
            &none      &none      &none      &none      &none          &none      &none      &none        &none        &none
            &kp N7     &kp N5     &kp N3     &kp N1     &kp N9         &kp N8     &kp N0     &kp N2       &kp N4       &kp N6
            &none      &none      &none      &none      &none          &none      &none      &out OUT_TOG &bt BT_SEL 0 &bt BT_CLR_ALL
                                             &none      &sl FUNC       &none      &soft_off
            >;
        };

        func_layer {
            label = "FUNC";
            bindings = <
            &kp F1   &kp F2   &kp F3       &kp F4    &kp F5            &kp F6       &kp F7        &kp F8      &kp F9     &kp F10
            &sk LGUI &sk LALT &sk LSHIFT   &sk LCTRL &kp C_VOL_UP      &kp PSCRN    &kp LEFT      &kp DOWN    &kp UP     &kp RIGHT
            &none    &none    &out OUT_TOG &kp DEL   &kp C_VOL_DN      &none        &sl LANGCH    &none       &kp F11    &kp F12
                                           &soft_off &none             &lt NUM ESC  &none
            >;
        };

        lang_layer {
            label = "LANGCH";
            bindings = <
            &kp LANG_SW  &none      &none      &none      &none          &none      &none      &none      &none      &none
            &none        &none      &ls RU     &ls ENG    &none          &none      &none      &none      &none      &none
            &none        &none      &none      &none      &none          &none      &none      &none      &none      &none
                                               &none      &none          &none      &none
            >;
        };

        opts_layer {
            label = "OPTS";
            bindings = <
            &none           &none       &none  &sys_reset  &bootloader     &bootloader  &sys_reset    &none         &none         &none
            &bt BT_CLR_ALL  &none       &none  &none       &to GAME_BASE  &none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
            &none           &bt BT_CLR  &none  &none       &to GALLIUM           &none        &none         &none         &none         &none
                                               &none       &none           &none        &none
            >;
        };

        game_base_layer {
            label = "GAME_BASE";
            bindings = <
            &kp Q      &kp W      &kp E      &kp R      &kp T            &kp Y      &kp U      &kp I      &kp O      &kp P
            &kp A      &kp S      &kp D      &kp F      &kp G            &kp H      &kp J      &kp K      &kp L      &kp SEMI
            &kp Z      &kp X      &kp C      &kp V      &kp B            &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
                                             &kp SPACE  &sl GAME_SECOND  &lt NUM ESC  &mt LSHIFT BSPC
            >;
        };

        game_second_layer {
            label = "GAME_SECOND";
            bindings = <
            &kp N6      &kp N7      &kp N8      &kp N9      &kp N0              &kp Y      &kp U      &kp I      &kp O      &kp P
            &kp N1      &kp N2      &kp N3      &kp N4      &kp N5              &kp H      &kp J      &kp K      &kp L      &kp SEMI
            &kp TAB     &kp U       &kp I       &kp O       &kp P               &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
                                             &kp SPACE      &sl GAME_SECOND     &lt NUM ESC  &mt LSHIFT BSPC
            >;
        };

        gallium_base_layer {
            label = "GALLIUM";
            bindings = <
            &kp B      &kp L      &kp D      &kp C      &kp V            &kp J      &kp Y      &kp O      &kp U      &kp FSLH
            &kp N      &kp R      &kp T      &kp S      &kp G            &kp P      &kp H      &kp A      &kp E      &kp I
            &kp X      &kp Q      &kp M      &kp W      &kp Z            &kp K      &kp F      &kp SQT    &kp MINUS  &kp DOT
                                             &kp SPACE  &sl FUNC         &lt NUM ESC  &mt LSHIFT BSPC
            >;
        };

    };
};
